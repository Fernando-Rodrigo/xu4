#!/usr/bin/bash
# Container build script for xu4 Linux & Windows packages.

if [ ! -s project.tar.gz ]; then
	sed -i "s/KR-1.0/DR-$(git rev-parse --short HEAD)/" project.b
	copr -a -t mingw
fi


TIME=$(date +%H%M%S)
SCRIPT=build-$TIME
ID=${SCRIPT}
HDIR=/tmp
CDIR=/tmp
WSM=../workshop/mingw-build
WSL=../workshop/linux-build

if [ "$1" == "win" ]; then
	if [ ! -d ${WSM} ]; then
		echo "Library archive ${WSM} not found!"
		exit
	fi
	echo '
  unzip /tmp/allegro-x86_64-w64-mingw32-gcc-10.2.0-posix-seh-static-5.2.7.0.zip
  mv allegro usr
  unzip /tmp/boron-x86_64-w64-mingw32-static-2.0.6.zip
  mkdir u4
  cd u4
  tar xf /tmp/project.tar.gz
  copr -t mingw use_gl:false make_util:false
' >$HDIR/${SCRIPT}

	podman run -d -it --name=$ID xu4/f33-mingw:1.0 /bin/bash || exit
	podman cp ${WSM}/allegro-x86_64-w64-mingw32-gcc-10.2.0-posix-seh-static-5.2.7.0.zip $ID:$CDIR
	podman cp ${WSM}/boron-x86_64-w64-mingw32-static-2.0.6.zip $ID:$CDIR
	podman cp project.tar.gz $ID:$CDIR
	podman cp $HDIR/${SCRIPT} $ID:$CDIR/${SCRIPT}
	podman exec -it -u build $ID /bin/bash $CDIR/${SCRIPT}
	podman cp $ID:/home/build/u4/u4.exe /tmp/u4.exe-$TIME

	# Build zip archive.
	if [ "$2" != "-b" ]; then
		mkdir -p /tmp/xu4
		FN=`readlink -f ${WSM}/allegro-dll.tar.bz2`
		tar xf $FN -C /tmp/xu4
		cp /tmp/u4.exe-$TIME /tmp/xu4/u4.exe
		cd /tmp; zip -r xu4-win32.zip xu4
	fi
else
	echo '
  tar xjf /tmp/boron-x86_64-static-2.0.6.tar.bz2
  mkdir u4
  cd u4
  tar xf /tmp/project.tar.gz
  copr use_gl:false make_util:false boron_sdk:%../boron
' >$HDIR/${SCRIPT}

	podman run -d -it --name=$ID xu4/f33-gcc:1.0 /bin/bash || exit
	podman cp ${WSL}/boron-x86_64-static-2.0.6.tar.bz2 $ID:$CDIR
	podman cp project.tar.gz $ID:$CDIR
	podman cp $HDIR/${SCRIPT} $ID:$CDIR/${SCRIPT}
	podman exec -it $ID /bin/bash $CDIR/${SCRIPT}
	podman cp $ID:/home/build/u4/u4 /tmp/u4-$TIME
fi

echo "$SCRIPT done!"
podman stop $ID
